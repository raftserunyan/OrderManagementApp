@page "/suppliers/{id}/edit/"
@using OrderManagementApp.Shared.Dtos
@using OrderManagementApp.Shared.Enums
@using OrderManagementApp.UI.Services
@inject ISupplierService _supplierService
@inject NavigationManager _navigatorManager

<div class="container border">
    <EditForm Model="@SupplierToEdit" OnValidSubmit="@HandleValidSubmit" class="p-2 rounded">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Id</label>
            <input type="number" class="form-control disabled" @bind-value="SupplierToEdit.Id" />
        </div>

        <div class="form-group">
            <label>Name</label>
            <input type="text" class="form-control" @bind-value="SupplierToEdit.Name" />
        </div>

        <div class="form-group">
            <label>AddressLine1</label>
            <input type="text" class="form-control" @bind-value="SupplierToEdit.AddressLine1" />
        </div>

        <div class="form-group">
            <label>AddressLine2</label>
            <input type="text" class="form-control" @bind-value="SupplierToEdit.AddressLine2" />
        </div>

        <div class="form-group">
            <label>City</label>
            <input type="text" class="form-control" @bind-value="SupplierToEdit.City" />
        </div>

        <div class="form-group">
            <label>Postal Code</label>
            <input type="text" class="form-control" @bind-value="SupplierToEdit.PostalCode" />
        </div>

        <div class="form-group">
            <label>State</label>
            <select class="form-control" @bind="SupplierToEdit.State">
                @foreach (var state in Enum.GetValues(typeof(State)))
                {
                    <option value="@state">@state</option>
                }
            </select>
        </div>

        <div class="form-group">
            <button class="btn btn-success mr-1" @onclick="SubmitFormAsync">Submit</button>
            <button class="btn btn-secondary mr-1" @onclick="GoBackToSuppliersPage">Back</button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public SupplierModel supplier { get; set; }

    private SupplierUpdateRequest SupplierToEdit;

    protected override async Task OnInitializedAsync()
    {
        SupplierToEdit = new SupplierUpdateRequest()
            {
                Id = supplier.Id,
                Name = supplier.Name,
                AddressLine1 = supplier.AddressLine1,
                AddressLine2 = supplier.AddressLine2,
                City = supplier.City,
                PostalCode = supplier.PostalCode,
                State = supplier.State,
            };

        await base.OnInitializedAsync();
    }

    protected async Task SubmitFormAsync()
    {
        await _supplierService.UpdateSupplierAsync(SupplierToEdit);
    }

    protected void HandleValidSubmit()
    {
        _navigatorManager.NavigateTo("suppliers");
    }

    protected void GoBackToSuppliersPage()
    {
        _navigatorManager.NavigateTo("suppliers");
    }
}
